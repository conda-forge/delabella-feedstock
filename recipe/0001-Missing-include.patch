From 45a283b31ac1829ef22ec106e3872e513d79ee37 Mon Sep 17 00:00:00 2001
From: martinRenou <martin.renou@gmail.com>
Date: Wed, 14 Feb 2024 10:39:08 +0100
Subject: [PATCH 1/1] Missing include

---
 delabella.cpp | 19 ++++++++++---------
 1 file changed, 10 insertions(+), 9 deletions(-)

diff --git a/delabella.cpp b/delabella.cpp
index e31135c..c9a3668 100644
--- a/delabella.cpp
+++ b/delabella.cpp
@@ -24,6 +24,7 @@ Copyright (C) 2018-2022 GUMIX - Marcin Sokalski
 #include <algorithm>
 #include <stdint.h>
 #include <string.h>
+#include <time.h>
 
 #include "delabella.h"
 #include "predicates.h"
@@ -462,7 +463,7 @@ struct CDelaBella2 : IDelaBella2<T, I>
 						else
 							vert_map[i] += c + 1;
 					}
-					
+
 				}
 			}
 			#endif
@@ -474,7 +475,7 @@ struct CDelaBella2 : IDelaBella2<T, I>
 
 			if (errlog_proc)
 				errlog_proc(errlog_file, "\r[100] sorting vertices (%lld ms)\n", (time1 - *sort_stamp) / 1000);
-			
+
 			*sort_stamp = time1;
 
 			if (points - w)
@@ -1854,7 +1855,7 @@ struct CDelaBella2 : IDelaBella2<T, I>
 
 							Face *P = (Face *)(N->f[c]);
 							Face *Q = (Face *)(F->f[f]);
-							
+
 							// int p = P->f[0] == N ? 0 : P->f[1] == N ? 1 : 2;
 							// look for Nba edge
 							int p = P->v[0] == v0 ? 2 : P->v[1] == v0 ? 0 : 1;
@@ -2078,7 +2079,7 @@ struct CDelaBella2 : IDelaBella2<T, I>
 
 								//int q = Q->f[0] == F ? 0 : Q->f[1] == F ? 1 : 2;
 								// look for Fed edge
-								int q = Q->v[0] == v1 ? 2 : Q->v[1] == v1 ? 0 : 1;																		
+								int q = Q->v[0] == v1 ? 2 : Q->v[1] == v1 ? 0 : 1;
 
 								// do flip
 								N->v[a] = v1;
@@ -2309,7 +2310,7 @@ struct CDelaBella2 : IDelaBella2<T, I>
 				seed = flip;
 				flip = 0;
 				flip_tail = 0;
-			}			
+			}
 
 			// 2. until stack is not empty
 			//    - pop 1 face from stack
@@ -3008,7 +3009,7 @@ struct CDelaBella2 : IDelaBella2<T, I>
 							}
 							stack = stack->push;
 						}
-					
+
 						//Split(v, (I)(u - v));
 						stack->sub[depth].v = v;
 						stack->sub[depth].n = (I)(u - v);
@@ -3197,7 +3198,7 @@ struct CDelaBella2 : IDelaBella2<T, I>
 						// all verts are dups
 						// dont touch
 
-						// ehm, actually they can appear as dups (inexact rot) 
+						// ehm, actually they can appear as dups (inexact rot)
 						// but there may be a non dup hidden in the middle
 						struct
 						{
@@ -3743,8 +3744,8 @@ struct CDelaBella2 : IDelaBella2<T, I>
 			{
 				assert(h->f[2] == f);
 				assert(nf == h->GetEdgeBits(2));
-			}	
-			else 
+			}
+			else
 			if (h->v[1] == b && h->v[2] == a)
 			{
 				assert(h->f[0] == f);
-- 
2.43.0

